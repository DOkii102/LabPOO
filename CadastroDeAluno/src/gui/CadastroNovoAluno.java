/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import classes.Aluno;
import classes.Estados;
import classes.Filtro;
import excecoes.EnderecoVazioException;
import excecoes.NomeVazioException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JTable;
import javax.swing.ListModel;
import operacoes.OperacoesTabela;

/**
 *
 * @author joovitor
 */
public class CadastroNovoAluno extends javax.swing.JFrame {

    private ArrayList<Aluno> listaAlunos;
    private Aluno aluno;
    private JTable tabelaAlunos;
    private DefaultListModel dlistaInteresses = new DefaultListModel();
    private Filtro filtro;
    private Estados estados;
    /**
     * Creates new form CadastroAlunoEditar
     */
    public CadastroNovoAluno(ArrayList<Aluno> listaAlunos, Aluno aluno, JTable tabelaAlunos, Filtro filtro, Estados estados) {
        initComponents();
        this.listaAlunos = listaAlunos;
        this.aluno = aluno;
        this.tabelaAlunos = tabelaAlunos;
        this.filtro = filtro;
        this.estados = estados;
        
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        
        carregaEstados();
        carregaCidades();
        carregaDadaos(aluno);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaInteressesCheia = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaInteresses = new javax.swing.JList<>();
        bRemoveInteresse = new javax.swing.JButton();
        bAdicionaInteresse = new javax.swing.JButton();
        labelTelefone = new javax.swing.JLabel();
        labelEndereco = new javax.swing.JLabel();
        cEndereco = new javax.swing.JTextField();
        LabelCpf = new javax.swing.JLabel();
        labelNome = new javax.swing.JLabel();
        cNome = new javax.swing.JTextField();
        cCidade = new javax.swing.JComboBox<>();
        labelEndereco1 = new javax.swing.JLabel();
        cEstado = new javax.swing.JComboBox<>();
        rFeminino = new javax.swing.JRadioButton();
        rMasculino = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        cObservacoes = new javax.swing.JTextField();
        bCancelar = new javax.swing.JButton();
        bSalvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Interesses"));

        listaInteressesCheia.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Redes", "Internet", "Desenvolvimento Web", "Segurança", "Compiladores", "Jogos", "Inteligência artificial", "Lab web", "Lab poo" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listaInteressesCheia);

        jScrollPane2.setViewportView(listaInteresses);

        bRemoveInteresse.setFont(new java.awt.Font("Fira Sans", 1, 24)); // NOI18N
        bRemoveInteresse.setForeground(new java.awt.Color(0, 0, 204));
        bRemoveInteresse.setText(">>");
        bRemoveInteresse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRemoveInteresseActionPerformed(evt);
            }
        });

        bAdicionaInteresse.setFont(new java.awt.Font("Fira Sans", 1, 24)); // NOI18N
        bAdicionaInteresse.setForeground(new java.awt.Color(204, 0, 0));
        bAdicionaInteresse.setText("<<");
        bAdicionaInteresse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAdicionaInteresseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bRemoveInteresse)
                    .addComponent(bAdicionaInteresse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(bRemoveInteresse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bAdicionaInteresse)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        labelTelefone.setText("Sexo:");

        labelEndereco.setText("Cidade:");

        LabelCpf.setText("Endereço");

        labelNome.setText("Nome:");

        labelEndereco1.setText("Estado:");

        cEstado.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cEstadoItemStateChanged(evt);
            }
        });

        buttonGroup1.add(rFeminino);
        rFeminino.setSelected(true);
        rFeminino.setText("Feminino");
        rFeminino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rFemininoActionPerformed(evt);
            }
        });

        buttonGroup1.add(rMasculino);
        rMasculino.setText("Masculino");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Observações"));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cObservacoes)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(cObservacoes, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                .addContainerGap())
        );

        bCancelar.setText("Cancelar");
        bCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelarActionPerformed(evt);
            }
        });

        bSalvar.setFont(new java.awt.Font("Fira Sans", 1, 13)); // NOI18N
        bSalvar.setText("Salvar");
        bSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(LabelCpf)
                                        .addComponent(labelNome))
                                    .addGap(23, 23, 23))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(labelTelefone)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelEndereco1)
                                .addGap(35, 35, 35)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelEndereco)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cEndereco)
                            .addComponent(cNome, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(rFeminino)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rMasculino)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bSalvar)
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNome)
                    .addComponent(cNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelCpf)
                    .addComponent(cEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEndereco)
                    .addComponent(cCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelEndereco1)
                    .addComponent(cEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelTelefone)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rFeminino)
                        .addComponent(rMasculino)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bCancelar)
                    .addComponent(bSalvar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bRemoveInteresseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRemoveInteresseActionPerformed
        
        Object lista[] = this.listaInteresses.getSelectedValues(); 
        
        int i = 0;
        while(i < lista.length) {
            if(this.dlistaInteresses.contains(lista[i]))
            {
                this.dlistaInteresses.removeElement(lista[i]);
                i--;
            }
            i++;
        }
        
                
        this.listaInteresses.setModel(this.dlistaInteresses);
        
        
    }//GEN-LAST:event_bRemoveInteresseActionPerformed

    private void bAdicionaInteresseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAdicionaInteresseActionPerformed
        
        Object lista[] = this.listaInteressesCheia.getSelectedValues(); 
        
        
        for (int i = 0; i < lista.length; i++) {
            if(!this.dlistaInteresses.contains(lista[i]))
                this.dlistaInteresses.addElement(lista[i]);
        }
        
                
        this.listaInteresses.setModel(this.dlistaInteresses);
    }//GEN-LAST:event_bAdicionaInteresseActionPerformed

    private void rFemininoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rFemininoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rFemininoActionPerformed

    private void bCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_bCancelarActionPerformed

    private void bSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalvarActionPerformed
        try {
            cadastraAluno();
            this.dispose();
        } catch (NomeVazioException ex) {
            new Aviso(ex.getMessage());
        } catch (EnderecoVazioException ex) {
            new Aviso(ex.getMessage());
        }
        
        OperacoesTabela.atualizarTabela(this.listaAlunos, this.tabelaAlunos, this.filtro);
    }//GEN-LAST:event_bSalvarActionPerformed

    private void cEstadoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cEstadoItemStateChanged
        carregaCidades();
    }//GEN-LAST:event_cEstadoItemStateChanged

    
    public void carregaDadaos(Aluno aluno)
    {
        if(aluno != null)
        {
                this.cNome.setText(aluno.getNome());
                this.cEndereco.setText(aluno.getEndereco());
                
                for(int i=0; i<this.cEstado.getItemCount();i++)
                {
                       if(this.cEstado.getItemAt(i).toString().equals(aluno.getEstado()))
                       {
                           this.cEstado.setSelectedIndex(i);
                           break;
                       }
                }
                
                for(int i=0; i<this.cCidade.getItemCount();i++)
                {
                       if(this.cCidade.getItemAt(i).toString().equals(aluno.getCidade()))
                       {
                           this.cCidade.setSelectedIndex(i);
                           break;
                       }
                }
                
                Object lista[] = aluno.getInteresses().toArray();
                for (int i = 0; i < lista.length; i++) {
                    if(!this.dlistaInteresses.contains(lista[i]))
                        this.dlistaInteresses.addElement(lista[i]);
                }


                this.listaInteresses.setModel(this.dlistaInteresses);
                
                this.cObservacoes.setText(aluno.getObservacoes());
        }
    
    
    }
    
    
    public void cadastraAluno() throws NomeVazioException, EnderecoVazioException
    {
        if(this.cNome.getText().equals(""))
            throw new NomeVazioException();
        
        if(this.cEndereco.getText().equals(""))
            throw new EnderecoVazioException();
        
        String sexo;
        if(this.rFeminino.isSelected())
               sexo = "Feminino";
        else 
            sexo = "Masculino";
        
        ArrayList<String> interesses = new ArrayList<String>();
        for (int i = 0; i < this.dlistaInteresses.size(); i++) {
            interesses.add(this.dlistaInteresses.getElementAt(i).toString());
        }
        
        
        
        if(this.aluno == null)
        {
            Aluno aluno = new Aluno(this.cNome.getText(),this.cEndereco.getText(),
                                    sexo, this.cCidade.getSelectedItem().toString(),
                                    this.cEstado.getSelectedItem().toString(), interesses,
                                    this.cObservacoes.getText());
            this.listaAlunos.add(aluno);
        }
        else
        {
               int index = this.listaAlunos.indexOf(this.aluno);
               Aluno aluno = this.listaAlunos.get(index);
               aluno.setNome(this.cNome.getText());
               aluno.setEndereco(this.cEndereco.getText());
               aluno.setSexo(sexo);
               aluno.setCidade(this.cCidade.getSelectedItem().toString());
               aluno.setEstado(this.cEstado.getSelectedItem().toString());
               aluno.setInteresses(interesses);
               aluno.setObservacoes(this.cObservacoes.getText());
        }
        
    
       
    }
    
    
    public void carregaEstados()
    {
        this.cEstado.addItem("AC");
        this.cEstado.addItem("AL");
        this.cEstado.addItem("AP");
        this.cEstado.addItem("AM");
        this.cEstado.addItem("BA");
        this.cEstado.addItem("CE");
        this.cEstado.addItem("DF");
        this.cEstado.addItem("ES");
        this.cEstado.addItem("GO");
        this.cEstado.addItem("MA");
        this.cEstado.addItem("MT");
        this.cEstado.addItem("MS");
        this.cEstado.addItem("MG");
        this.cEstado.addItem("PA");
        this.cEstado.addItem("PB");
        this.cEstado.addItem("PR");
        this.cEstado.addItem("PE");
        this.cEstado.addItem("PI");
        this.cEstado.addItem("RJ");
        this.cEstado.addItem("RN");
        this.cEstado.addItem("RS");
        this.cEstado.addItem("RO");
        this.cEstado.addItem("RR");
        this.cEstado.addItem("SC");
        this.cEstado.addItem("SP");
        this.cEstado.addItem("SE");
        this.cEstado.addItem("TO");
        
    
    }
    
    public void carregaCidades()
    {
        this.cCidade.removeAllItems();
        
        
        
        if(this.cEstado.getSelectedItem().toString().equals("AC"))
        {
            for (int i = 0; i < this.estados.getAc().size() ;i++) {
                this.cCidade.addItem(this.estados.getAc().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("AL"))
        {
            for (int i = 0; i < this.estados.getAl().size() ;i++) {
                this.cCidade.addItem(this.estados.getAl().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("AP"))
        {
            for (int i = 0; i < this.estados.getAp().size() ;i++) {
                this.cCidade.addItem(this.estados.getAp().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("AM"))
        {
            for (int i = 0; i < this.estados.getAm().size() ;i++) {
                this.cCidade.addItem(this.estados.getAm().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("BA"))
        {
            for (int i = 0; i < this.estados.getBa().size() ;i++) {
                this.cCidade.addItem(this.estados.getBa().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("CE"))
        {
            for (int i = 0; i < this.estados.getCe().size() ;i++) {
                this.cCidade.addItem(this.estados.getCe().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("DF"))
        {
            for (int i = 0; i < this.estados.getDf().size() ;i++) {
                this.cCidade.addItem(this.estados.getDf().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("ES"))
        {
            for (int i = 0; i < this.estados.getEs().size() ;i++) {
                this.cCidade.addItem(this.estados.getEs().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("GO"))
        {
            for (int i = 0; i < this.estados.getGo().size() ;i++) {
                this.cCidade.addItem(this.estados.getGo().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("MA"))
        {
            for (int i = 0; i < this.estados.getMa().size() ;i++) {
                this.cCidade.addItem(this.estados.getMa().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("MT"))
        {
            for (int i = 0; i < this.estados.getMt().size() ;i++) {
                this.cCidade.addItem(this.estados.getMt().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("MS"))
        {
            for (int i = 0; i < this.estados.getMs().size() ;i++) {
                this.cCidade.addItem(this.estados.getMs().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("MG"))
        {
            for (int i = 0; i < this.estados.getMg().size() ;i++) {
                this.cCidade.addItem(this.estados.getMg().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("AC"))
        {
            for (int i = 0; i < this.estados.getAc().size() ;i++) {
                this.cCidade.addItem(this.estados.getAc().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("PA"))
        {
            for (int i = 0; i < this.estados.getPa().size() ;i++) {
                this.cCidade.addItem(this.estados.getPa().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("PB"))
        {
            for (int i = 0; i < this.estados.getPb().size() ;i++) {
                this.cCidade.addItem(this.estados.getPb().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("PR"))
        {
            for (int i = 0; i < this.estados.getPr().size() ;i++) {
                this.cCidade.addItem(this.estados.getPr().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("PE"))
        {
            for (int i = 0; i < this.estados.getPe().size() ;i++) {
                this.cCidade.addItem(this.estados.getPe().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("PI"))
        {
            for (int i = 0; i < this.estados.getPi().size() ;i++) {
                this.cCidade.addItem(this.estados.getPi().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("RJ"))
        {
            for (int i = 0; i < this.estados.getRj().size() ;i++) {
                this.cCidade.addItem(this.estados.getRj().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("RN"))
        {
            for (int i = 0; i < this.estados.getRn().size() ;i++) {
                this.cCidade.addItem(this.estados.getRn().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("RS"))
        {
            for (int i = 0; i < this.estados.getRs().size() ;i++) {
                this.cCidade.addItem(this.estados.getRs().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("RO"))
        {
            for (int i = 0; i < this.estados.getRo().size() ;i++) {
                this.cCidade.addItem(this.estados.getRo().get(i));
            }
        }
        else if(this.cEstado.getSelectedItem().toString().equals("RR"))
        {
            for (int i = 0; i < this.estados.getRr().size() ;i++) {
                this.cCidade.addItem(this.estados.getRr().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("SC"))
        {
            for (int i = 0; i < this.estados.getSc().size() ;i++) {
                this.cCidade.addItem(this.estados.getSc().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("SP"))
        {
            for (int i = 0; i < this.estados.getSp().size() ;i++) {
                this.cCidade.addItem(this.estados.getSp().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("SE"))
        {
            for (int i = 0; i < this.estados.getSe().size() ;i++) {
                this.cCidade.addItem(this.estados.getSe().get(i));
            }
        }
        
        else if(this.cEstado.getSelectedItem().toString().equals("TO"))
        {
            for (int i = 0; i < this.estados.getTo().size() ;i++) {
                this.cCidade.addItem(this.estados.getTo().get(i));
            }
        }
        
        
    
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelCpf;
    private javax.swing.JButton bAdicionaInteresse;
    private javax.swing.JButton bCancelar;
    private javax.swing.JButton bRemoveInteresse;
    private javax.swing.JButton bSalvar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cCidade;
    private javax.swing.JTextField cEndereco;
    private javax.swing.JComboBox<String> cEstado;
    private javax.swing.JTextField cNome;
    private javax.swing.JTextField cObservacoes;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelEndereco;
    private javax.swing.JLabel labelEndereco1;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelTelefone;
    private javax.swing.JList<String> listaInteresses;
    private javax.swing.JList<String> listaInteressesCheia;
    private javax.swing.JRadioButton rFeminino;
    private javax.swing.JRadioButton rMasculino;
    // End of variables declaration//GEN-END:variables
}
